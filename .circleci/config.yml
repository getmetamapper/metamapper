version: 2.1
jobs:
  backend-lint:
    docker:
      - image: cimg/python:3.7.10
    steps:
      - checkout
      - run: pip install flake8 --quiet
      - run: make lint-py
  backend-tests:
    docker:
      - image: cimg/python:3.7.10
        environment:
          METAMAPPER_CELERY_RESULT_BACKEND: "amqp"
      - image: cimg/postgres:12.9
        name: database
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: metamapper
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Update directory permissions
          command: sudo chown -R circleci:circleci /usr/local/bin
      - run:
          name: Install Linux dependencies
          command: |
            sudo apt-get update -y && \
            sudo apt-get install -y g++ libxml2-dev libxmlsec1-dev libxmlsec1-openssl
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip --quiet
            pip install -r requirements.txt -r requirements-dev.txt --quiet
      - run:
          name: Wait for database
          command: dockerize -wait tcp://database:5432 -timeout 1m
      - run:
          name: Run database migrations
          command: |
            . venv/bin/activate
            python manage.py migrate
      - run:
          name: Run test suite
          command: |
            . venv/bin/activate
            python manage.py test --parallel=4 --exclude-tag=inspector
  frontend-tests:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          key: npm-{{ checksum "./www/package-lock.json" }}
      - run: make install-npm-pkgs
      - save_cache:
          key: npm-{{ checksum "./www/package-lock.json" }}
          paths:
            - ./www/node_modules
      - run: make test-js
  build-preview-docker-image:
    docker:
      - image: cimg/node:12.22.12
    steps:
      - setup_remote_docker:
          version: 19.03.13
      - checkout
      - run:
          name: Publish to Docker Hub
          command: ./bin/docker-publish
workflows:
  pipeline:
    jobs:
      - backend-lint
      - backend-tests:
          requires:
            - backend-lint
      - frontend-tests:
          requires:
            - backend-lint
      - build-preview-docker-image:
          context: dockerhub
          requires:
            - backend-tests
            - frontend-tests
          filters:
            branches:
              only:
                - master
